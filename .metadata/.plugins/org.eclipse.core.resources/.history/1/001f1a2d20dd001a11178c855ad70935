package com.atbm.quanlybenhvien.views.Doctor;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;

import com.atbm.quanlybenhvien.entity.User;
import com.atbm.quanlybenhvien.util.ConnectionControl;
import com.atbm.quanlybenhvien.views.GenericStuff;

public class DoctorPatDetails extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel contentPane;

	private User user;

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	private DefaultTableModel tableDichVu;

	public DefaultTableModel getTableDichVu() {
		return tableDichVu;
	}

	public void setTableDichVu(DefaultTableModel tableDichVu) {
		this.tableDichVu = tableDichVu;
	}

	private DefaultTableModel tableToaThuoc;

	public DefaultTableModel getTableToaThuoc() {
		return tableToaThuoc;
	}

	public void setTableToaThuoc(DefaultTableModel tableToaThuoc) {
		this.tableToaThuoc = tableToaThuoc;
	}

	private GenericStuff genericStuff = new GenericStuff();

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					DoctorPatDetails frame = new DoctorPatDetails(new User(), new String());
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public DoctorPatDetails(final User user, final String maKB) {
		this.user = user;

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 800, 420);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		contentPane.setLayout(new BorderLayout(0, 0));
		setContentPane(contentPane);

	}

	@SuppressWarnings("serial")
	private void drawTable_DichVu(String maKB) {
		try {

			Connection conn = new ConnectionControl().createConnection(this.user.getUserName(),
					this.user.getPassword());
			String sql = "SELECT * FROM QLBV.VIEW_DIEUPHOIDICHVU DPDV JOIN QLBV.DICHVU DV ON DPDV.MADV = DV.MADV WHERE DPDV.MAKB = '"
					+ maKB + "'";
			PreparedStatement preparedStatement = conn.prepareStatement(sql);
			ResultSet res = preparedStatement.executeQuery();
			if (res.next() == false) {
				JOptionPane.showMessageDialog(null, "Chưa có dữ liệu trong khám bệnh!");

			} else {
				String[] columns = { "STT", "Mã Khám Bệnh", "Mã Dịch Vụ", "Dịch Vụ", "Mô Tả" };
				tableDichVu = new DefaultTableModel(columns, 0) {
					@Override
					public boolean isCellEditable(int row, int column) {
						return false;
					}
				};
				int i = 1;
				do {
					String[] data = { String.valueOf(i++), res.getString("MAKB"), res.getString("MADV"),
							res.getString("TEN"), res.getString("MOTA") != null ? res.getString("MOTA") : "Chưa Có" };
					tableDichVu.addRow(data);
				} while (res.next());

				conn.close();
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
