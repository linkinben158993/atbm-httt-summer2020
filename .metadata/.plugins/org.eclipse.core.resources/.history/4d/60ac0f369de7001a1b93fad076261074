package com.atbm.quanlybenhvien.views.Receptionist;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.Font;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;

import com.atbm.quanlybenhvien.entity.User;
import com.atbm.quanlybenhvien.util.ConnectionControl;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;

public class ReceptionistEditServices extends JDialog {

	private static final long serialVersionUID = 1L;

	private final JPanel contentPanel = new JPanel();
	private JTextField txtMaKB;
	private JTextField txtMaDV;

	private User user;

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	private ReceptionistService prevFrame;

	public ReceptionistService getPrevFrame() {
		return prevFrame;
	}

	public void setPrevFrame(ReceptionistService prevFrame) {
		this.prevFrame = prevFrame;
	}

	public static void main(String[] args) {
		try {
			ReceptionistEditServices dialog = new ReceptionistEditServices(new User(),
					new ReceptionistService(new User()), new String(), new String(), new String());
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public ReceptionistEditServices(final User user, final ReceptionistService prevFrame, final String maKB,
			final String maDV, String moTa) {
		this.user = user;
		this.prevFrame = prevFrame;

		setBounds(100, 100, 350, 171);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));

		JLabel lblMaKB = new JLabel("Mã Khám Bệnh:");
		lblMaKB.setFont(new Font("Times New Roman", Font.BOLD, 12));
		lblMaKB.setBounds(10, 11, 114, 14);
		contentPanel.add(lblMaKB);

		txtMaKB = new JTextField(maKB);
		txtMaKB.setEditable(false);
		txtMaKB.setBounds(134, 8, 190, 20);
		contentPanel.add(txtMaKB);
		txtMaKB.setColumns(10);

		JLabel lblMaDV = new JLabel("Mã Dịch Vụ:");
		lblMaDV.setFont(new Font("Times New Roman", Font.BOLD, 12));
		lblMaDV.setBounds(10, 39, 114, 14);
		contentPanel.add(lblMaDV);

		txtMaDV = new JTextField(maDV);
		txtMaDV.setEditable(false);
		txtMaDV.setColumns(10);
		txtMaDV.setBounds(134, 39, 190, 20);
		contentPanel.add(txtMaDV);

		JLabel lblMoTa = new JLabel("Mô Tả:");
		lblMoTa.setFont(new Font("Times New Roman", Font.BOLD, 12));
		lblMoTa.setBounds(10, 67, 114, 14);
		contentPanel.add(lblMoTa);

		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);

		final JComboBox<String> comboBox_MoTa = new JComboBox<String>();
		comboBox_MoTa.addItem("Chờ Dịch Vụ");
		comboBox_MoTa.addItem("Chờ Kết Quả");
		comboBox_MoTa.setBounds(134, 64, 190, 20);
		comboBox_MoTa.setSelectedItem(moTa);
		contentPanel.add(comboBox_MoTa);
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				JButton okButton = new JButton("Sửa Điều Phối");
				okButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						Connection conn = null;
						try {
							conn = new ConnectionControl().createConnection(user.getUserName(), user.getPassword());
							PreparedStatement stmt = conn.prepareStatement(
									"UPDATE QLBV.DIEUPHOIDICHVU SET MOTA = ? WHERE MAKB = ? AND MADV = ?");
							stmt.setString(1, comboBox_MoTa.getSelectedItem().toString());
							stmt.setString(2, maKB);
							stmt.setString(3, maDV);
							stmt.executeUpdate();

							conn.close();

							JOptionPane.showMessageDialog(null, "Xửa thông tin điều phối thành công!");

						} catch (Exception e2) {
							e2.printStackTrace();

							try {
								conn.close();
							} catch (SQLException e1) {
								// TODO Auto-generated catch block
								e1.printStackTrace();
							}

							JOptionPane.showMessageDialog(null, "Xửa thông tin điều phối thất bại!");
						}
					}
				});
				okButton.setActionCommand("OK");
				buttonPane.add(okButton);
				getRootPane().setDefaultButton(okButton);
			}
			{
				JButton cancelButton = new JButton("Hủy");
				cancelButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						dispose();
					}
				});
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}
		}
	}

}
