package com.atbm.quanlybenhvien.views.MHumanResources;

import java.awt.BorderLayout;
import java.awt.FlowLayout;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import com.atbm.quanlybenhvien.entity.User;
import com.atbm.quanlybenhvien.util.ConnectionControl;

import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JComboBox;

public class MHRAddEmps extends JDialog {

	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();

	private User user;
	private JTextField txtMaNV;
	private JTextField txtHoTen;
	private JComboBox<String> comboBox_Phong;
	private JComboBox<String> comboBox_ChucVu;

	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	public static void main(String[] args) {
		try {
			MHRAddEmps dialog = new MHRAddEmps(new User(), new MHREmployee(new User()));
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public MHRAddEmps(final User user, final MHREmployee prevFrame) {
		this.user = user;

		setBounds(100, 100, 300, 205);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		contentPanel.setLayout(null);
		{
			JLabel lblMaNV = new JLabel("Mã Nhân Viên:");
			lblMaNV.setBounds(10, 11, 90, 14);
			contentPanel.add(lblMaNV);
		}
		{
			txtMaNV = new JTextField();
			txtMaNV.setBounds(110, 8, 164, 20);
			contentPanel.add(txtMaNV);
			txtMaNV.setColumns(10);
		}
		{
			JLabel lblHoTen = new JLabel("Họ Tên:");
			lblHoTen.setBounds(10, 39, 90, 14);
			contentPanel.add(lblHoTen);
		}
		{
			txtHoTen = new JTextField();
			txtHoTen.setColumns(10);
			txtHoTen.setBounds(110, 36, 164, 20);
			contentPanel.add(txtHoTen);
		}
		{
			JLabel lblPhong = new JLabel("Phòng:");
			lblPhong.setBounds(10, 67, 90, 14);
			contentPanel.add(lblPhong);
		}
		{
			comboBox_Phong = new JComboBox<String>();
			comboBox_Phong.setMaximumRowCount(5);
			comboBox_Phong.setBounds(110, 64, 164, 20);
			try {
				Connection conn = new ConnectionControl().createConnection(user.getUserName(), user.getPassword());
				// Lấy tất cả các bảng thuộc quyền sở hữu của dba
				String sql = "SELECT * FROM QLBV.PHONG";
				PreparedStatement statement = conn.prepareStatement(sql);
				ResultSet res = statement.executeQuery();
				if (res.next() == false) {
					JOptionPane.showMessageDialog(null, "Chưa có phòng nào!");
				} else {
					do {
						comboBox_Phong.addItem(res.getString("MAP"));
					} while (res.next());
				}

				conn.close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			comboBox_Phong.setSelectedItem(null);
			contentPanel.add(comboBox_Phong);
		}
		{
			JLabel lblChcV = new JLabel("Chức Vụ:");
			lblChcV.setBounds(10, 95, 90, 14);
			contentPanel.add(lblChcV);
		}
		{
			comboBox_ChucVu = new JComboBox<String>();
			comboBox_ChucVu.setMaximumRowCount(5);
			comboBox_ChucVu.setBounds(110, 92, 164, 20);
			comboBox_ChucVu.addItem("Bac si");
			comboBox_ChucVu.addItem("Nhan vien tiep tan dieu phoi");
			comboBox_ChucVu.addItem("Nhan vien tai vu");
			comboBox_ChucVu.addItem("Nhan vien bo phan ban thuoc");
			comboBox_ChucVu.addItem("Nhan vien ke toan");
			comboBox_ChucVu.addItem("Quan ly tai nguyen va nhan vu");
			comboBox_ChucVu.addItem("Quan ly tai vu");
			comboBox_ChucVu.addItem("Nhan vien bo phan ban thuoc");
			contentPanel.add(comboBox_ChucVu);
		}
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				JButton okButton = new JButton("Thêm Mới Nhân Viên");
				okButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						if (txtHoTen.getText().equals("") || txtMaNV.getText().equals("") || comboBox_Phong.getSelectedItem() == null||comboBox_ChucVu.getSelectedItem()MHRAddEmps == null) {
							JOptionPane.showMessageDialog(null, "Vui lòng không bỏ trống các trường");
						}
					}
				});
				okButton.setActionCommand("OK");
				buttonPane.add(okButton);
				getRootPane().setDefaultButton(okButton);
			}
			{
				JButton cancelButton = new JButton("Hủy");
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}
		}
	}

}
